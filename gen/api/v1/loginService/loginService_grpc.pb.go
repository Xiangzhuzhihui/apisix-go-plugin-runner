// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: api/proto/v1/loginService.proto

package loginService

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiSixServerClient is the client API for ApiSixServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiSixServerClient interface {
	DecodeAndVerifyV3(ctx context.Context, in *Jwt, opts ...grpc.CallOption) (*ResultApiSix, error)
}

type apiSixServerClient struct {
	cc grpc.ClientConnInterface
}

func NewApiSixServerClient(cc grpc.ClientConnInterface) ApiSixServerClient {
	return &apiSixServerClient{cc}
}

func (c *apiSixServerClient) DecodeAndVerifyV3(ctx context.Context, in *Jwt, opts ...grpc.CallOption) (*ResultApiSix, error) {
	out := new(ResultApiSix)
	err := c.cc.Invoke(ctx, "/loginService.ApiSixServer/decodeAndVerifyV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiSixServerServer is the server API for ApiSixServer service.
// All implementations must embed UnimplementedApiSixServerServer
// for forward compatibility
type ApiSixServerServer interface {
	DecodeAndVerifyV3(context.Context, *Jwt) (*ResultApiSix, error)
	mustEmbedUnimplementedApiSixServerServer()
}

// UnimplementedApiSixServerServer must be embedded to have forward compatible implementations.
type UnimplementedApiSixServerServer struct {
}

func (UnimplementedApiSixServerServer) DecodeAndVerifyV3(context.Context, *Jwt) (*ResultApiSix, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeAndVerifyV3 not implemented")
}
func (UnimplementedApiSixServerServer) mustEmbedUnimplementedApiSixServerServer() {}

// UnsafeApiSixServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiSixServerServer will
// result in compilation errors.
type UnsafeApiSixServerServer interface {
	mustEmbedUnimplementedApiSixServerServer()
}

func RegisterApiSixServerServer(s grpc.ServiceRegistrar, srv ApiSixServerServer) {
	s.RegisterService(&ApiSixServer_ServiceDesc, srv)
}

func _ApiSixServer_DecodeAndVerifyV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Jwt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiSixServerServer).DecodeAndVerifyV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/loginService.ApiSixServer/decodeAndVerifyV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiSixServerServer).DecodeAndVerifyV3(ctx, req.(*Jwt))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiSixServer_ServiceDesc is the grpc.ServiceDesc for ApiSixServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiSixServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "loginService.ApiSixServer",
	HandlerType: (*ApiSixServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "decodeAndVerifyV3",
			Handler:    _ApiSixServer_DecodeAndVerifyV3_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/v1/loginService.proto",
}
